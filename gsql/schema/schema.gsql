CREATE VERTEX Patient (PRIMARY_ID Id STRING, FirstName STRING, LastName STRING, Prefix STRING, Suffix STRING, MaidenName STRING, MaritalStatus STRING, DateOfBirth DATETIME, DateOfDeath DATETIME DEFAULT "2999-12-31 00:00:00", SSN STRING, DL STRING, Passport STRING, Features LIST<DOUBLE>, Embedding LIST<DOUBLE>)

CREATE VERTEX Gender (PRIMARY_ID gender_id STRING, Features LIST<DOUBLE>, Embedding LIST<DOUBLE>) WITH PRIMARY_ID_AS_ATTRIBUTE = "True"

CREATE VERTEX Race (PRIMARY_ID race_id STRING, Features LIST<DOUBLE>, Embedding LIST<DOUBLE>) WITH PRIMARY_ID_AS_ATTRIBUTE = "True"

CREATE VERTEX Ethnicity (PRIMARY_ID ethnicity_id STRING, Features LIST<DOUBLE>, Embedding LIST<DOUBLE>) WITH PRIMARY_ID_AS_ATTRIBUTE = "True"

CREATE VERTEX Provider (PRIMARY_ID Id STRING, Name STRING, Gender STRING, Speciality STRING, Utilization INT, Features LIST<DOUBLE>, Embedding LIST<DOUBLE>)

CREATE VERTEX Visit (PRIMARY_ID Id STRING, Code STRING, Description STRING, Started DATETIME, Stopped DATETIME, Cost DOUBLE, Features LIST<DOUBLE>, Embedding LIST<DOUBLE>) 

CREATE VERTEX SnomedCode(PRIMARY_ID Id STRING, Code String, Description STRING, CodeType STRING, Features LIST<DOUBLE>, Embedding LIST<DOUBLE>)

CREATE VERTEX CarePlan(PRIMARY_ID Id STRING, Code STRING, Description STRING, ReasonCode STRING, ReasonDescription STRING, Started DATETIME, Stopped DATETIME DEFAULT "2999-12-31 00:00:00", Features LIST<DOUBLE>, Embedding LIST<DOUBLE>)

CREATE VERTEX ImagingStudy(PRIMARY_ID Id STRING, BodySiteCode STRING, BodySiteDescription STRING, ModalityCode STRING, ModalityDescription STRING, SOPCode STRING, SOPDescription STRING, ImagingDate DATETIME, Features LIST<DOUBLE>, Embedding LIST<DOUBLE>)

CREATE VERTEX Medication(PRIMARY_ID Id STRING, Code STRING, Description STRING, Cost DOUBLE, Dispense INT, TotalCost DOUBLE, ReasonCode STRING, ReasonDescription STRING, Features LIST<DOUBLE>, Embedding LIST<DOUBLE>)

CREATE VERTEX Organization(PRIMARY_ID Id STRING, Name STRING, Utilization INT, Features LIST<DOUBLE>, Embedding LIST<DOUBLE>)

CREATE VERTEX PatientProcedure(PRIMARY_ID Id STRING, Code STRING, Description STRING, Cost DOUBLE, ReasonCode STRING, ReasonDescription STRING, Features LIST<DOUBLE>, Embedding LIST<DOUBLE>)

CREATE VERTEX Zip(PRIMARY_ID Id STRING, ZipCode STRING, Latitude DOUBLE, Longitude DOUBLE, Features LIST<DOUBLE>, Embedding LIST<DOUBLE>)

CREATE VERTEX State(PRIMARY_ID Id STRING, Name STRING, Features LIST<DOUBLE>, Embedding LIST<DOUBLE>)

CREATE VERTEX City(PRIMARY_ID Id STRING, Name STRING, Features LIST<DOUBLE>, Embedding LIST<DOUBLE>)

CREATE VERTEX Address(PRIMARY_ID Id STRING, Name STRING, Features LIST<DOUBLE>, Embedding LIST<DOUBLE>)

CREATE VERTEX Location(PRIMARY_ID Id STRING, Latitude DOUBLE, Longitude DOUBLE, Features LIST<DOUBLE>, Embedding LIST<DOUBLE>)

CREATE DIRECTED EDGE imagingBodyCode (FROM ImagingStudy, TO SnomedCode, Features LIST<DOUBLE>, Embedding LIST<DOUBLE>) WITH REVERSE_EDGE = "codeForBodySite"

CREATE DIRECTED EDGE imagingModalityCode (FROM ImagingStudy, TO SnomedCode, Features LIST<DOUBLE>, Embedding LIST<DOUBLE>) WITH REVERSE_EDGE = "codeForModality"

CREATE DIRECTED EDGE imagingSOPCode (FROM ImagingStudy, TO SnomedCode, Features LIST<DOUBLE>, Embedding LIST<DOUBLE>) WITH REVERSE_EDGE = "codeForSOP"

CREATE DIRECTED EDGE patientVisit (FROM Patient, TO Visit, Started DATETIME, Stopped DATETIME, Features LIST<DOUBLE>, Embedding LIST<DOUBLE>) WITH REVERSE_EDGE = "patientSeen"

CREATE DIRECTED EDGE providerVisit (FROM Provider, TO Visit, Features LIST<DOUBLE>, Embedding LIST<DOUBLE>) WITH REVERSE_EDGE = "providerSeen"

CREATE DIRECTED EDGE patientGender (FROM Patient, TO Gender, Features LIST<DOUBLE>, Embedding LIST<DOUBLE>) WITH REVERSE_EDGE = "genderOfPatient"

CREATE DIRECTED EDGE patientRace (FROM Patient, TO Race, Features LIST<DOUBLE>, Embedding LIST<DOUBLE>) WITH REVERSE_EDGE = "raceOfPatient"

CREATE DIRECTED EDGE patientEthnicity (FROM Patient, TO Ethnicity, Features LIST<DOUBLE>, Embedding LIST<DOUBLE>) WITH REVERSE_EDGE = "ethnicityOfPatient"

CREATE DIRECTED EDGE reasonOfCarePlan (FROM CarePlan, TO SnomedCode, Features LIST<DOUBLE>, Embedding LIST<DOUBLE>) WITH REVERSE_EDGE = "reasonForCarePlan"

CREATE DIRECTED EDGE carePlanCode (FROM CarePlan, TO SnomedCode, Features LIST<DOUBLE>, Embedding LIST<DOUBLE>) WITH REVERSE_EDGE = "codeForCarePlan"

CREATE DIRECTED EDGE reasonOfMedication (FROM Medication, TO SnomedCode, Features LIST<DOUBLE>, Embedding LIST<DOUBLE>) WITH REVERSE_EDGE = "reasonForMedication"

CREATE DIRECTED EDGE medicationCode (FROM Medication, TO SnomedCode, Features LIST<DOUBLE>, Embedding LIST<DOUBLE>) WITH REVERSE_EDGE = "codeForMedication"

CREATE DIRECTED EDGE reasonOfProcedure (FROM PatientProcedure, TO SnomedCode, Features LIST<DOUBLE>, Embedding LIST<DOUBLE>) WITH REVERSE_EDGE = "reasonForProcedure"

CREATE DIRECTED EDGE procedureCode (FROM PatientProcedure, TO SnomedCode, Features LIST<DOUBLE>, Embedding LIST<DOUBLE>) WITH REVERSE_EDGE = "codeForProcedure"

CREATE DIRECTED EDGE hasAllergy (FROM Patient, TO SnomedCode, Started DATETIME, Stopped DATETIME DEFAULT "2999-12-31 00:00:00", Features LIST<DOUBLE>, Embedding LIST<DOUBLE>) WITH REVERSE_EDGE = "patientAllergy"

CREATE DIRECTED EDGE hasCarePlan (FROM Patient, TO CarePlan, Started DATETIME, Stopped DATETIME DEFAULT "2999-12-31 00:00:00", Features LIST<DOUBLE>, Embedding LIST<DOUBLE>) WITH REVERSE_EDGE = "patientCarePlan"

CREATE DIRECTED EDGE hasCondition (FROM Patient, TO SnomedCode, Started DATETIME, Stopped DATETIME DEFAULT "2999-12-31 00:00:00", Features LIST<DOUBLE>, Embedding LIST<DOUBLE>) WITH REVERSE_EDGE = "patientCondition"

CREATE DIRECTED EDGE hasImagingStudy (FROM Patient, TO ImagingStudy, Performed DATETIME, Features LIST<DOUBLE>, Embedding LIST<DOUBLE>) WITH REVERSE_EDGE = "patientImagingStudy"

CREATE DIRECTED EDGE hasImmunization (FROM Patient, TO SnomedCode, Performed DATETIME, Features LIST<DOUBLE>, Embedding LIST<DOUBLE>) WITH REVERSE_EDGE = "patientImmunization"

CREATE DIRECTED EDGE hasMedication (FROM Patient, TO Medication, Started DATETIME, Stopped DATETIME DEFAULT "2999-12-31 00:00:00", Features LIST<DOUBLE>, Embedding LIST<DOUBLE>) WITH REVERSE_EDGE = "patientMedication"

CREATE DIRECTED EDGE hasObservation (FROM Patient, TO SnomedCode, Performed DATETIME, Measurement STRING, Units STRING, ValueType STRING, Features LIST<DOUBLE>, Embedding LIST<DOUBLE>) WITH REVERSE_EDGE = "patientObservation"

CREATE DIRECTED EDGE hasProcedure (FROM Patient, TO PatientProcedure, Performed DATETIME, Features LIST<DOUBLE>, Embedding LIST<DOUBLE>) WITH REVERSE_EDGE = "patientProcedure"

CREATE DIRECTED EDGE worksAt (FROM Provider, TO Organization, Features LIST<DOUBLE>, Embedding LIST<DOUBLE>) WITH REVERSE_EDGE = "employs"

CREATE DIRECTED EDGE zipInState (FROM Zip, TO State, Features LIST<DOUBLE>, Embedding LIST<DOUBLE>) WITH REVERSE_EDGE = "stateHasZip"

CREATE DIRECTED EDGE zipInCity (FROM Zip, TO City, Features LIST<DOUBLE>, Embedding LIST<DOUBLE>) WITH REVERSE_EDGE = "cityHasZip"

CREATE DIRECTED EDGE cityInState (FROM City, TO State, Features LIST<DOUBLE>, Embedding LIST<DOUBLE>) WITH REVERSE_EDGE = "stateHasCity"

CREATE DIRECTED EDGE addressInZip (FROM Address, TO Zip, Features LIST<DOUBLE>, Embedding LIST<DOUBLE>) WITH REVERSE_EDGE = "zipHasAddress"

CREATE DIRECTED EDGE residesAt (FROM Patient, TO Address, Features LIST<DOUBLE>, Embedding LIST<DOUBLE>) WITH REVERSE_EDGE = "patientAddress"

CREATE DIRECTED EDGE foundAt ( FROM Organization, TO Address, Features LIST<DOUBLE>, Embedding LIST<DOUBLE>) WITH REVERSE_EDGE = "organizationAddress"

CREATE DIRECTED EDGE patientLocatedAt (FROM Patient, TO Location, Features LIST<DOUBLE>, Embedding LIST<DOUBLE>) WITH REVERSE_EDGE = "patientLocation"

CREATE DIRECTED EDGE organizationLocatedAt (FROM Organization, TO Location, Features LIST<DOUBLE>, Embedding LIST<DOUBLE>) WITH REVERSE_EDGE = "organizationLocation"

CREATE DIRECTED EDGE visitCode (FROM Visit, TO SnomedCode, Features LIST<DOUBLE>, Embedding LIST<DOUBLE>) WITH REVERSE_EDGE = "codeForVisit"

CREATE DIRECTED EDGE tookPlaceAt (FROM PatientProcedure, TO Visit, Features LIST<DOUBLE>, Embedding LIST<DOUBLE>) WITH REVERSE_EDGE = "procAtVisit"

CREATE DIRECTED EDGE prescribedAt (FROM Medication, TO Visit, Features LIST<DOUBLE>, Embedding LIST<DOUBLE>) WITH REVERSE_EDGE = "medPrescribed"

CREATE DIRECTED EDGE recommendedAt (FROM CarePlan, TO Visit, Features LIST<DOUBLE>, Embedding LIST<DOUBLE>) WITH REVERSE_EDGE = "recommendedCarePlan"

CREATE DIRECTED EDGE imagedAt (FROM ImagingStudy, TO Visit, Features LIST<DOUBLE>, Embedding LIST<DOUBLE>) WITH REVERSE_EDGE = "imagingAtVisit"

CREATE GRAPH @graphname@(Patient, Provider, Visit, CarePlan, ImagingStudy, Medication, Organization, PatientProcedure, Zip, State, City, Address, 
                        Location, Gender, Race, Ethnicity, SnomedCode, patientVisit, providerVisit, hasAllergy, hasCarePlan, hasCondition, hasImagingStudy, 
                        hasImmunization, hasMedication, hasObservation, hasProcedure, worksAt, zipInState, zipInCity, cityInState, addressInZip, residesAt, 
                        foundAt, patientLocatedAt, organizationLocatedAt, patientGender, patientRace, patientEthnicity, reasonOfCarePlan, reasonOfMedication,
                        reasonOfProcedure, imagingBodyCode, imagingModalityCode, imagingSOPCode, procedureCode, medicationCode, carePlanCode, visitCode, 
                        tookPlaceAt, prescribedAt, recommendedAt, imagedAt)